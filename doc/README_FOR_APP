# Installation

To install ideapi from scratch, first clone the source from apu:

    git clone git@apu.pebbleit.com:ideapi.com.git

    # Ideapi uses redis so install it through homebrew. If you need to install homebrew
    # follow instructions here: https://github.com/mxcl/homebrew
    brew update
    brew install redis    # Follow post install instructions

    # If you don't have mysql installed
    brew install mysql

    # Change to the directory where you downloaded the ideapi source
    bundle install # you may need to use `sudo bundle install` depending on your setup

    # Create a database.yml file with relevant account in mysql

    # Set up db
    rake db:create    # Required if ideapi db hasn't been created yet
    rake db:setup


Add this to the /etc/apache2/extra/httpd-vhosts.conf file, replacing [ideapi directory] with the relevant value:

    <VirtualHost *:80>
        <Directory [ideapi directory]>
          Options +FollowSymlinks +SymLinksIfOwnerMatch
          Order allow,deny
          allow from all
          AllowOverride All
        </Directory>
        DocumentRoot [ideapi directory]/public
        ServerName vcap.me
        ServerAlias *.vcap.me
        RailsEnv development
    </VirtualHost>

## Resque

ideapi makes use of Resque http://github.com/defunkt/resque to queue background jobs. Resque relies on Redis.
The Resque README provides instructions on installing Redis.

To ensure that workers do not die (bless them) ideapi also uses monit (see monit section). The staging and
production servers are configured to keep workers and Redis alive.

On your development box you will need to have Redis and workers running if you want to use Resque and send email.

To start a work, invoke a worker from the *root of the rails site* using the following command

    # For development (default)
    QUEUE=* rake environment resque:work

    # For staging
    QUEUE=* rake RAILS_ENV=staging environment resque:work

    # For production
    QUEUE=* rake RAILS_ENV=production environment resque:work

    # To daemonise, add an & at the end

To start the Resque GUI run (Note, production resque gui only works within the pebble network)

    resque-web -p 8282 config/initializers/load_resque.rb

This shows you workers running and any problems with the jobs you send them.

If you are not running Redis as a daemon, you can start it with

    redis-server /usr/local/etc/redis.conf

To kill a worker, find it using ps aux and use kill eg,

    ideapi.com$ ps aux | grep resque
    12:ttt      10928   0.0  0.6  2459144  25140 s005  S     5:56pm   3:17.83 ruby /Users/ttt/.rvm/gems/ree-1.8.7-2011.03@ideapi/bin/resque-web -p 8282 config/initializers/load_resque.rb
    135:ttt      24530   0.0  0.0  2435116    528 s005  S+   11:11am   0:00.00 grep -n resque
    140:ttt      24403   0.0  1.7  2503712  72064 s004  S+   11:05am   0:05.35 resque-1.9.8: Waiting for *

    ideapi.com$ kill 24403


## Gotchas

### http://vcap.me/ redirects to 404 page

Clear the browser cache. Could occur when you log into ideapi, and then clear out the database. An issue with the cookies.

### ActionController::InvalidAuthenticityToken error when logging in/signing up

Check config/environments/development.rb variable is the same as the url eg,

  config.action_controller.session = { :domain => ".vcap.me" }

for the *.vcap.me domain.

### Resque failures on staging/production

    Access denied for user 'ideapi'@'localhost' to database 'ideapi_development'

    or

    Mysql::Error: Table 'ideapi_development.user_documents' doesn't exist: SHOW FIELDS FROM `user_documents`

Need to add 'RAILS_ENV=staging' or 'RAILS_ENV=production' when starting the workers

# Testing

The current state of the testing environment is as follows

* TestUnit for unit tests and integration tests (was the initial setup)
* Cucumber tests added for integration tests/bdd style development
* Factories used are Machinist (mainly for TestUnit), and Factory Girl (mainly for cucumber)

To run unit tests

    bundle exec rake test

    # To run 1 test file (2 approaches)
    rake test:units TEST=test/unit/document_test.rb
    bundle exec ruby -Itest test/unit/test_name.rb

    # To run 1 test file, but with bug of running the test 3 times (http://snippets.dzone.com/posts/show/7586)
    bundle exec rake test TEST=test/unit/test_name.rb

To run cucumber tests:

    bundle exec cucumber


Machinist (https://github.com/technoweenie/machinist) factories are stored in blueprints.rb

# Continuous integration

Continuous integration website via Jenkins is at (need to be in the pebbleit network to access it):

    http://ci.apu.pebbleit.com/job/ideapi/

To get to the configuration of the ideapi Jenkins job on apu:

    ~$ ssh apu.pebbleit.com
    ~$ su jenkins
    ~$ cd /var/lib/jenkins/jobs/ideapi
    /var/lib/jenkins/jobs/ideapi$ cd workspace        # Contains the previous build code

## Debugging in test unit

Using ruby-debug, you can use

    debugger

in your code, to open the console when it is run in a test.

See http://nanorails.com/articles/2006/07/14/a-better-rails-debugger-ruby-debug/ for more details.

## Spork

To make the tests load faster, run spork (https://github.com/timcharper/spork) before running the tests. Spork loads the rails environment so that the tests do not have to do so each time they are run. However, note that spork will need to be restarted if models or configuration files are changed, as the entire rails environment will need to be refreshed.

To run spork, go to the ideapi directory and execute:

    bundle exec spork

Tried using spork for test unit (https://github.com/timcharper/spork-testunit), but it doesn't seem to run properly without commenting out

    require 'test_helper'

in the beginning of test files. But this conflicts with running test unit regularly, and could have conflicts with Jenkins. Needs more investigation...



# Deployment

If you haven't set up your local production branch already, in your ideapi root, run

    git checkout -b production origin/production

Pull the production branch

    git pull origin production

Merge with the master branch

    git merge master
    git push

Deploy

    cap production deploy

Note, if it says you require a password, you will need to add your ssh key to the production server.

# Production server

To ssh into production:

    ssh jason@ideapi.com

Firewall rules are in:

    /etc/iptables.test.rules

To restart the apache server:

    sudo /etc/init.d/apache2 restart

Apache configuration is in:

    /etc/apache2/sites-enabled/ideapi.com

To check that the apache service is running

    sudo netstat -ltnp | grep ':80'

## Website monitoring

To monitor the site, use:

* New relic (https://rpm.newrelic.com/accounts/7079/applications) - login details in mortimer
* Ping on slicehost (https://manage.slicehost.com/slices/55399)
* http://tools.pingdom.com/ to test the speed of loading the site. For reference, ideapi loads in < 10s as at 28th Apri 2011
* http://www.downforeveryoneorjustme.com/ to test if the site it down

Can also check http://status.slicehost.com/ for production.

To monitor resque:

* Start resque-web on production

    resque-web -p 8282 config/initializers/load_resque.rb

* Open up http://ideapi.com:8282/
If it doesn't load, then check the firewall rules

* To restart resque workers, kill the processes and restart them (see the Resque section)

# RVM

ideapi uses RVM (https://rvm.beginrescueend.com/) to manage different versions of ruby.

The configuration file is stored in .rvmrc

# Monit

Monit (http://mmonit.com/monit/) is used to make sure resque workers are restarted if they are down.

The monit tasks are stored in:

    /etc/monit/conf.d/ideapi.net       # On staging
    /etc/monit/monit.d/ideapi.monit    # On production

Outputs to log/resque_worker.log if there are projects

To start workers

    sudo /usr/sbin/monit -g ideapi start all      # Staging

To view the status

    sudo /usr/sbin/monit summary
    sudo /usr/sbin/monit status

To view the status on staging:

    http://monit.apu.pebbleit.com:81/

If monit config is changed, you need to reload monit

    sudo /usr/sbin/monit reload
    # or sudo /etc/init.d/monit restart

Also see: http://wiki.apu.pebbleit.com/index.php/Monit

# Meta

* Hoptoad: https://pebbleit.hoptoadapp.com/projects/14618/errors
* Pivotal: https://www.pivotaltracker.com/projects/91593
