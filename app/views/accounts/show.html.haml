= sub_nav do
  = breadcrumb_list
.col_1
  %h3 Account Management
  #update_domain_name
    - form_for @account, :url => account_path, :html => {:id => 'account_domain_form', :multipart => true} do |domain_form|
      .field.account-url
        = domain_form.label :domain, 'Subdomain'
        .account-domain
          %p.domain
            = "#{domain_form.text_field :domain}"
            %span.base_domain=".#{AppConfig['base_domain']}"
          - if domain_form.object.errors[:domain].present?
            %p.errors= domain_form.object.errors[:name] 
          .desc
            :markdown
              **You can change your account subdomain here**. The subdomain must be at least 3 characters, lowercase letters and numbers only. 
              You may change this later on. By changing your subdomain, all users of this account will need to login using the new url. 
          %p.warning.change_domain
            = domain_form.check_box :change_domain
            = domain_form.label :change_domain, "Tick this box to confirm you understand."

      .field.submit
        = domain_form.submit 'Change subdomain'
            
  #update_account
    - form_for @account, :url => account_path, :html => {:id => 'edit_account_form', :multipart => true} do |f|
      .field.company-name
        %p
          = f.label :name, 'Company Name'
          = f.text_field :name
          %span.errors= f.object.errors[:name]
      .field.account-holder
        %p
          = f.label :admin, 'Account Holder'
          = f.collection_select :admin, current_account.users, :id, :full_name, :prompt => true, :selected => @account.admin.id
        %p.warning NB. By changing the account holder, you will no longer have access to this page and will be redirected to the dashboard.
      .field.logo
        %p
          = f.label :logo, 'Logo' 
          = f.file_field :logo
        - if f.object.errors[:logo].present?
          %p.errors= f.object.errors[:logo]
        %p.logo-preview
          =image_tag(@account.logo.url(:normal))
          - if @account.logo.url(:normal) != @account.logo.options[:default_url]
            = check_box_tag :delete_logo, '1'
            = label_tag :delete_logo, 'Delete logo'
      .field.submit
        = f.submit 'Update'
  - if @subscription.state == 'trial'
    .note
      %h3
        Thank you for trying 
        = succeed "!" do
          = AppConfig['app_name']
 
      - if @subscription.next_renewal_at > Time.now
        %p 
          Your trial account will expire in 
          = succeed "," do
            %strong= pluralize(@subscription.trial_days, 'day', 'days') 
          at which time you will no longer have access to your account.  
          To maintain access to your account, enter your credit card information below. 
        %p 
          Your first charge will happen on 
          = succeed "." do
            %strong= @subscription.next_renewal_at.to_s(:long_day)
      - else
        %p Your trial account has expired. To regain access to your account, enter your credit card information below.  Your first charge will happen immediately, and you will be billed monthly thereafter.

  = render :partial => 'plan' if false

  - if @subscription.state == 'trial' or @subscription.amount > 0
    = render :partial => 'billing'

  / %p= link_to('Cancel plan', cancel_account_url)
  #delete-account
    %h3 Delete Account
    %p
      If you would like to delete your account, you can do so by following the 'Delete account' button.
    %p.align-right= link_to 'Delete Account', cancel_account_url, :class => 'ideapi_button'