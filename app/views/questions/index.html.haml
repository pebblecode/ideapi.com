=sub_nav do
  =breadcrumb_list

.col_1

  %ul.filter_questions
    -(owner?(parent_object) ? %w(unanswered recent answered) : %w(recent answered unanswered)).each do |link|
      %li=tab_link link.titlecase, brief_questions_path(parent_object, :q => link)
    %li.brief_item_filter
      -form_for :briefs, briefs_path, :html => {:method => :get} do |f|
        %span by response:
        =select_tag(:brief_item_id, options_from_collection_for_select(parent_object.questions.brief_items, 'id', 'title_truncated', params[:brief_item_id]))
        =f.submit 'show', :name => ""
    
  %ul.question_list
    -if current_objects.empty?
      %li
        %p 
          No questions found
    -else
      -current_objects.group_by(&:updated_on).each do |date, questions|
        %li
          %p.updated
            %span
              ="#{time_ago_in_words(date)} ago"
          %ul
            =render :partial => 'question', :collection => questions, :locals => { :show_relation => @brief_item.blank? }
        
  -if !owner?(parent_object)
    .boom_box
      %h3 Ask a question
      - form_for(:question, :url => brief_questions_path(parent_object)) do |f|
        = render :partial => "form", :locals => {:f => f, :brief_item => @brief_item }
        
.col_2
  .discussion
    %p.join_discuss=link_to 'Back to brief Â»', brief_path(parent_object), :class => "awesome blue large", :style => "text-transform: uppercase"
  
  -if current_objects.respond_to?(:recent)
    =render :partial => 'questions/overview', :locals => { :overview_collection => current_objects }  