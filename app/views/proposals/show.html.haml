=sub_nav do
  =breadcrumb_list

.col_1
  
  .proposal
    %h2
      =current_object.title
      %span.status=current_object.state
            
      -if current_user.owns?(current_object) && current_object.draft?
        =link_to 'edit proposal', edit_brief_proposal_path(parent_object, current_object)
        
        
    .proposal_item
      %p=current_object.long_description
      
    - current_object.assets.each do |asset|
      .proposal_item
        %p
          -if asset.data.content_type =~ /image/
            =link_to image_tag(asset.data.url, :width => "120"), asset.data.url, :rel => "img_fb"
          -else
            =link_to asset.data.original_filename, asset.data.url
  
  - if current_user.owns?(current_object) && current_object.draft?
    .hr
    - form_for(current_object, :url => brief_proposal_path(parent_object, current_object), :html => { :method => :put, :multipart => true }) do |f|
      %p.submit
        = submit_tag "Submit proposal"
      .clear
  
  - unless current_object.draft?    
    .comments_area
      %h4 Comments      
      %ul.comments
        - if current_object.comments.blank?
          %li
            %p There have been no comments
        -current_object.comments.each do |comment|
          %li[comment]        
            %p.comment_body
              =small_avatar(comment.user)
              %span.speech
                %strong="#{comment_adjective_for given_name(comment.user), :position => :before}:"
                =comment.comment
              %span.clear      
        .comment
          #comment_form.comment_form
            =medium_avatar            
            - form_for :comment, :url => comments_path do |f|
              =hidden_field_tag :proposal_id, current_object.id
              .speech=f.text_area :comment, :rows => 5, :cols => 80
              %p.submit_comment=f.submit "submit"
  
        
.col_2
  - if !current_object.draft? and parent_object.approver?(current_user)
    .side_box
      %h2 Approve ideas
      .contents          
        .update_proposal
          - form_for(current_object, :url => brief_proposal_path(parent_object, current_object), :html => { :method => :put, :multipart => true }) do |f|
            %span mark brief as
            =f.select 'state', options_for_select(Proposal.approval_state_names.map{|s| [s.titleize, s] }, current_object.state.to_s)
            =f.submit "update"  
  
  %p=link_to 'back to brief', brief_path(parent_object)
  