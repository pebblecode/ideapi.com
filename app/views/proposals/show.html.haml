=sub_nav do
  =breadcrumb_list

.col_1
  - unless current_object.draft?
    #idea_show_notes.note
      :markdown
        Idea approvers can update the status of an idea to: 
        ‘Approved’, ‘Needs Work’ or ‘Rejected’. 
        Approvers and the idea owner can collaborate using the comments.
  .proposal
    .title
      %h2
        =current_object.title
        %span#widget_proposal_status.status=current_object.state.to_s.titleize
        
      -if current_user.owns?(current_object)
        .actions
          = link_to "Actions", "#", :class => "show-options-menu"
    - if current_user.owns?(current_object)
      #options-menu.remove_with_js
        %ul.object-actions
          -if current_user.owns?(current_object)
            %li
              =link_to 'edit', edit_brief_proposal_path(parent_object, current_object)
          -if current_user.owns?(current_object)
            %li
              -form_for brief_proposal_path, :html => { :method => :delete, :id => 'proposal_delete_form' } do |f|
                =hidden_field_tag '_flash[notice]', 'Idea deleted', :id => 'proposal_flash_notice'
                = submit_tag "delete", :class => 'remove_with_js'
                = link_to "delete", "#", :class => 'show_with_js'
    .proposal_item
      :textile
        #{current_object.long_description}
      
    - current_object.assets.each do |asset|
      .proposal_item
        .the_asset
          %p.asset
            -if asset.data.content_type =~ /image/
              =link_to image_tag(asset.data.url, :width => "120"), asset.data.url, :rel => "img_fb"
            -else
              =link_to asset.data.original_filename, asset.data.url
          - if asset.description.present?
            %p.description
              =asset.description
          .clear
  - if current_user.owns?(current_object) && current_object.draft?
    - form_for(current_object, :url => brief_proposal_path(parent_object, current_object), :html => { :method => :put, :multipart => true }) do |f|
      =f.hidden_field '_call_state', :value => 'publish'
      %p.submit
        = submit_tag "Submit", :class => 'funky-button-small'
      .clear
  
  - unless current_object.draft?
    #comments_area
      %h4 Idea comments
      %ul.comments
        - if current_object.comments.blank?
          %li
            %p There have been no comments
        -current_object.comments.each do |comment|
          %li
            %div[comment]
              =small_avatar(comment.user)
              .speech
                -if comment.user == current_user or current_object.user == current_user
                  - form_for comment, :html => {:method => :delete, :class => "delete_comment_form" } do |form|
                    = form.submit 'delete', :class => 'comment-delete ajaxify', :id => "delete_comment_#{comment.id}_submit"
                
                %p
                  
                  %strong
                    = succeed ':' do
                      =given_name(comment.user)
                  #{strip_tags(comment.comment)}
        %li#new_comment_li
          .comment
            #comment_form.comment_form
              =medium_avatar
              .speech
                - form_for :comment, :url => comments_path, :html => {:id => "new_comment_form"} do |f|
                  =hidden_field_tag :proposal_id, current_object.id
                  =f.text_area :comment, :rows => 5, :cols => 80
                  %p.button
                    %img{:src => "/images/ui/loading.gif", :alt => 'Submitting comment...', :class => "loading-gif hide"}
                    =f.submit "submit", :class => 'funky-button-small'
        
        
.col_2
  - if !current_object.draft?
    .side_box
      %h2 Status of idea
      .contents          
        #update_proposal_status.update_proposal
          - form_for(current_object, :url => brief_proposal_path(parent_object, current_object), :html => { :method => :put, :multipart => true }) do |f|
            %p=f.select 'state', options_for_select(Proposal.approval_state_names.map{|s| [s.titleize, s] }, current_object.state.to_s), :include_blank => 'Please select'
            %p.align-right
              %span.ajax-loading
                %img{:src => '/images/ui/loading.gif', :alt => 'Loading...'}/
              =f.submit "update", :class => 'funky-button-small'
  = render :partial => 'proposals/idea_users'